#!/bin/bash

set -e
echo "Started run.sh"

{% set nprocs = nx*ny*nz %}
{% set nnodes = (nprocs+3) // 4 %}

source ../env.sh

if [ -z $PROJ ]; then
    echo "Error: You must set PROJ to your project ID."
    exit 1
fi

DIRECT_FLAG=""
if [ ${MPICH_GPU_SUPPORT_ENABLED:-0} -eq 1 ]; then
  DIRECT_FLAG="--mpiDirect"
fi

cat >batch.sh <<.
#!/bin/bash
#SBATCH --time=00:30:00
#SBATCH --job-name={{ problem }}
#SBATCH --nodes={{ nnodes }}
#SBATCH --ntasks={{ nprocs }}
#SBATCH --cpus-per-task=8
#SBATCH --gres=gpu:4
#SBATCH --open-mode=append
#SBATCH -o stdout
#SBATCH -e stderr
#SBATCH -A $PROJ

echo "Started job on \$SLURM_JOB_NODELIST"

SRUN="srun -n {{ nprocs }} -N {{ nnodes }} -c8"
\$SRUN /bin/bash -c 'echo \$(hostname) \$(grep Cpus_allowed_list /proc/self/status) GPUS: \$ROCR_VISIBLE_DEVICES' | sort -n >affinity.txt

\$SRUN ../sys/bin/picongpu -d {{nx}} {{ny}} {{nz}} -g {{grid}} --periodic {{periodic}} \
                         $DIRECT_FLAG -s 500 --percent 1 \
                         --versionOnce --e_macroParticlesCount.period 50

echo "COMPLETE"

if [ {{nnodes}} -le 4 ]; then
  \$SRUN rocprof -o hip.csv --stats \
      ../sys/bin/picongpu -d {{nx}} {{ny}} {{nz}} -g {{grid}} \
                          --periodic {{periodic}} \
                          $DIRECT_FLAG -s 500 --percent 1 >profile.log

  sed 's/\(.*"\)\(.*CuplaKernel<\)\([A-Za-z:]*\)\(.*"\)/\1\3"/g' hip.csv > hip_clean.csv
  sed 's/\(.*"\)\(.*CuplaKernel<\)\([A-Za-z:]*\)\(.*"\)/\1\3"/g' hip.stats.csv > hip_clean.stats.csv
fi
.

sbatch batch.sh
